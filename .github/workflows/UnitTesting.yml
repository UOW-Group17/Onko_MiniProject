name: Unit Testing Code Base

on:
  # Ensuring the main code base works 
  push:
    branches: [ "main", "dev" ]
  # Ensuring any pull requests to main are tested 
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  # Testing to be run on Linux distros
  build:
    strategy: 
      matrix:
        os-version: [ubuntu-latest, windows-latest, macos-latest] # windows-latest,
        python-version: ["3.11", "3.12", "3.13"]    
    runs-on: ${{ matrix.os-version }}
    
    steps:
    
    # Getting git code base
    - uses: actions/checkout@v4
    
    # Creating the python environment
    - name: Set up Python Environment ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with: 
        python-version: ${{ matrix.python-version }}

    # Creating the poetry build system environment
    - name: Install Poetry
      uses: snok/install-poetry@v1.4.1
      with:
          version: 2.1.1
          virtualenvs-create: true
          virtualenvs-in-project: true

    - name: Print OS runner
      run: echo ${{ runner.os }}
    # # Got to Figure this out
    # - name: Setting Path variable
    #   if: runner.os == "Windows"
    #   run: PATH += ";C:\Users\runneradmin\.local\bin"
      
    # No idea what this section does
    # caching just sounds like it would be useful. Taken from
    # https://github.com/sjswerdloff/tdwii_plus_examples/blob/main/.github/workflows/python-app.yml#L38
    - name: Poetry Cache
      uses: actions/cache@v4
      id: poetry-cache
      with:
        path: .venv
        key: venv-${{ hashFiles('**/poetry.lock') }}

      # not sure if needed
      # If a cache exists sounds like a good idea check if it runs ok. Taken from
      # https://github.com/sjswerdloff/tdwii_plus_examples/blob/main/.github/workflows/python-app.yml#L38
    - name: Ensure cache is healthy
      if: steps.poetry-cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        timeout 10s poetry run pip --version || rm -rf .venv

    # Installing dependencies
    # NOTE: tests would not work if pytest-qt was active
    # NOTE: pytest-qt and Pyside6 may be disabled
    - name: Installing Poetry Dependencies
      run: poetry install
      
    # Running the tests required
    - name: Running Automated Tests using Pytest
      # getting the source files for to the files in the test file was a pain so we doing this on root
      run: poetry run pytest
